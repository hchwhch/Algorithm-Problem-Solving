//boj 2512 예산
//x를 상한액, y를 최대한의 총 예산으로 두고
//Parametric Search를 수행
#include<iostream>
#include<vector>
#include<string>
#include<queue>
#include<tuple>

using namespace std;

const int INF = 0x7f7f7f7f;

typedef long long ll;

int n;
int m;

ll d[100005];

//상한액 x일 때 총 예산
ll solve(int x)
{
    ll cur = 0;
    for (int i = 0; i < n; i++)
    {
        if (d[i] < x) cur += d[i];
        else cur += x;
    }

    return cur;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;

    for (int i = 0; i < n; i++) cin >> d[i];

    cin >> m;

    ll st = 0;
    ll en = 0;

    for (int i = 0; i < n; i++) en = max(en, d[i]);

    ll high = 0;
    ll mx = 0;
    while (st <= en)
    {
        ll mid = (st + en) / 2;

        ll cur = solve(mid);
//상한액 x일 때 총 예산이 사용가능한 총 예상보다 작거나 같다면
        if (cur <= m)
        {
            st = mid + 1;
            if (mx < cur)
            {
                mx = cur;
                high = mid;
            }
        }
//크다면
        else en = mid - 1;
    }
    cout << high;
}
