#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
#include<tuple>

using namespace std;

typedef long long ll;

vector<pair<int,int>> v[1005];

int d[1000005];

int n, m;
int a, b;

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);

	int n, m;
	cin >> n >> m;

	for (int i = 0; i < m; i++)
	{
		int s, e, c;
		cin >> s >> e >> c;

		v[s].push_back({ e, c });
	}

	cin >> a >> b;

	fill(d, d + n + 1, 0x7f7f7f7f);

	priority_queue<pair<int, int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;

	d[a] = 0;
	pq.push({ 0, a });

	while (!pq.empty())
	{
		int cd, cn;
		tie(cd, cn) = pq.top(); pq.pop();

		if (d[cn] != cd) continue;

		for (auto nxt : v[cn])
		{
			if (d[nxt.first] <= d[cn] + nxt.second) continue;
			d[nxt.first] = d[cn] + nxt.second;
			pq.push({ d[nxt.first], nxt.first });
		}
	}

	cout << d[b];
}
